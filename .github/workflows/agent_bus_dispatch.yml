name: Agent Bus (repository_dispatch)

on:
  repository_dispatch:
    types: [agent-event]

permissions:
  contents: read
  issues: read
  pull-requests: read

jobs:
  bus:
    if: github.ref_name == 'main' || github.ref_name == 'feat/agent-bus'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - uses: cli/gh-action@v2
      - name: Validate repository_dispatch signature
        env:
          REPO_DISPATCH_SECRET: ${{ secrets.REPO_DISPATCH_SECRET }}
          GITHUB_EVENT_PATH: ${{ github.event_path }}
        run: |
          set -euo pipefail
          TYPE=$(jq -r '.action // .event.action // ""' "$GITHUB_EVENT_PATH" || echo "")
          # Only proceed for allowed type(s)
          ALLOWED="agent-event"
          echo "type=$TYPE"
          if [ "$ALLOWED" != "${TYPE}" ]; then
            echo "unsupported repository_dispatch type: $TYPE" >&2
            exit 1
          fi
          # Extract client_payload and provided signature
          SIG=$(jq -r '.client_payload.signature // empty' "$GITHUB_EVENT_PATH")
          if [ -z "$SIG" ]; then
            echo "missing client_payload.signature" >&2
            exit 1
          fi
          # Compute expected signature over compacted client_payload excluding the signature field
          PAYLOAD_COMPACT=$(jq -c '.client_payload | del(.signature)' "$GITHUB_EVENT_PATH")
          EXPECTED=$(printf "%s" "$PAYLOAD_COMPACT" | openssl dgst -sha256 -hmac "$REPO_DISPATCH_SECRET" -binary | xxd -p -c 256)
          # Lowercase compare
          SIG_L=$(printf "%s" "$SIG" | tr 'A-F' 'a-f')
          EXP_L=$(printf "%s" "$EXPECTED" | tr 'A-F' 'a-f')
          if [ "$SIG_L" != "$EXP_L" ]; then
            echo "invalid signature" >&2
            exit 1
          fi
          echo "signature OK"
      - name: Route repository_dispatch to agent_bus
        env:
          UPSTREAM_GH_TOKEN: ${{ secrets.UPSTREAM_GH_TOKEN }}
          GITHUB_EVENT_PATH: ${{ github.event_path }}
        run: |
          # Extract command and payload; default to /notify
          CMD=$(jq -r '.client_payload.command // "/notify"' "$GITHUB_EVENT_PATH")
          PAYLOAD=$(jq -c '.client_payload.payload // {}' "$GITHUB_EVENT_PATH")
          export AGENT_BUS_COMMAND="$CMD"
          export AGENT_BUS_PAYLOAD="$PAYLOAD"
          python3 scripts/agent_bus.py
