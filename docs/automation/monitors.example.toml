enabled = false

[monitor.datadog_alerts]
type = "http"
method = "GET"
url = "https://api.datadoghq.com/api/v1/monitor?group_states=alert"
headers = { "DD-API-KEY" = "${ENV:DD_API_KEY}", "DD-APPLICATION-KEY" = "${ENV:DD_APP_KEY}" }
poll_interval_sec = 300
match_any_contains = ["\"overall_state\":\"Alert\""]
route_command = "/notify"
cooldown_sec = 900
include_sample = false

[monitor.jenkins_build]
type = "http"
method = "GET"
url = "https://jenkins.example.com/job/my-job/lastBuild/api/json"
headers = { "Authorization" = "Basic ${ENV:JENKINS_BASIC_AUTH}" }
poll_interval_sec = 180
json_path = "result"
operator = "ne"
value = "SUCCESS"
route_command = "/notify"
cooldown_sec = 600
include_sample = false

[monitor.custom_health]
type = "http"
method = "GET"
url = "https://service.example.com/health"
poll_interval_sec = 120
json_path = "status"
operator = "eq"
value = "degraded"
route_command = "/notify"
cooldown_sec = 600
include_sample = false

# Optional templates (disabled by default)

# [monitor.slack_incoming]
# type = "http"
# method = "POST"
# url = "https://hooks.slack.com/services/T000/B000/XXXX"  # consider passing via secret proxy
# poll_interval_sec = 0  # not a poller; use repository_dispatch or queue instead
# route_command = "/notify"
# match_any_contains = []  # not applicable
# include_sample = false

# [monitor.pagerduty_incidents]
# type = "http"
# method = "GET"
# url = "https://api.pagerduty.com/incidents?statuses=triggered"
# headers = { "Authorization" = "Token token=${ENV:PD_API_TOKEN}", "Accept" = "application/vnd.pagerduty+json;version=2" }
# poll_interval_sec = 300
# json_path = "incidents[0].status"
# operator = "eq"
# value = "triggered"
# route_command = "/notify"
# cooldown_sec = 900
# include_sample = false
